/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1;

import abstracto.Instruccion;
import analisis.parser;
import analisis.scanner;
import excepciones.Errores;
import instrucciones.AsignacionVar;
import instrucciones.Declaracion;
import instrucciones.Execute;
import instrucciones.Metodo;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.util.Arrays;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import simbolo.*;

/**
 *
 * @author opadi
 */
public class Javacraft extends javax.swing.JFrame {

    private LinkedList<Errores> listaErrores;
    private tablaSimbolos tabla;

    /**
     * Creates new form Javacraft
     */
    public Javacraft() {
        initComponents();
        this.getContentPane().setBackground(Color.decode("#9999FF"));
        textsalida.setBackground(Color.decode("#D5D5D5"));
        textsalida.setForeground(Color.BLACK);
        textentrada.setForeground(Color.BLACK);
        this.setLocationRelativeTo(null);
        textsalida.setEditable(false);
        listaErrores = new LinkedList<>();
        tabla = new tablaSimbolos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        Pest = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        textentrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        textsalida = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Ejecutar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        NArchivo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        AArchivo = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        GArchivo = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        RepErrores = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        RepAst = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        RepTablaSim = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaCraft");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 153, 255));

        textentrada.setColumns(20);
        textentrada.setForeground(new java.awt.Color(153, 153, 153));
        textentrada.setRows(5);
        jScrollPane1.setViewportView(textentrada);

        Pest.addTab("Pestaña 1", jScrollPane1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        Pest.addTab("Pestaña 2", jScrollPane2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        Pest.addTab("Pestaña 3", jScrollPane3);

        textsalida.setColumns(20);
        textsalida.setRows(5);
        jScrollPane4.setViewportView(textsalida);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Entrada");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Consola");

        Ejecutar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Ejecutar.setText("Ejecutar");
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });

        jMenu2.setText("Archivo");

        NArchivo.setText("Nuevo archivo");
        NArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NArchivoActionPerformed(evt);
            }
        });
        jMenu2.add(NArchivo);
        jMenu2.add(jSeparator3);

        AArchivo.setText("Abrir archivo");
        AArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AArchivoActionPerformed(evt);
            }
        });
        jMenu2.add(AArchivo);
        jMenu2.add(jSeparator4);

        GArchivo.setText("Guardar archivo");
        GArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GArchivoActionPerformed(evt);
            }
        });
        jMenu2.add(GArchivo);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Reportes");

        RepErrores.setText("Reporte de Errores");
        RepErrores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepErroresActionPerformed(evt);
            }
        });
        jMenu5.add(RepErrores);
        jMenu5.add(jSeparator1);

        RepAst.setText("Generar AST");
        RepAst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepAstActionPerformed(evt);
            }
        });
        jMenu5.add(RepAst);
        jMenu5.add(jSeparator2);

        RepTablaSim.setText("Reporte Tabla de Símbolos");
        RepTablaSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepTablaSimActionPerformed(evt);
            }
        });
        jMenu5.add(RepTablaSim);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Pest)
                            .addComponent(jScrollPane4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 394, Short.MAX_VALUE)
                        .addComponent(Ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(Ejecutar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pest, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NArchivoActionPerformed
        tabla.getTablaActual().clear();
        listaErrores.clear();
        String defaultText = "";
        for (int i = 0; i < Pest.getTabCount(); i++) {
            JTextArea textArea = (JTextArea) ((JScrollPane) Pest.getComponentAt(i)).getViewport().getView();
            textArea.setText(defaultText);
        }
    }//GEN-LAST:event_NArchivoActionPerformed

    private void RepErroresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepErroresActionPerformed
        javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
        modelo.addColumn("Tipo");
        modelo.addColumn("Descripción");
        modelo.addColumn("Línea");
        modelo.addColumn("Columna");

        for (Errores error : listaErrores) {
            Object[] fila = {error.getTipo(), error.getDesc(), error.getLinea(), error.getColumna()};
            modelo.addRow(fila);
        }

        javax.swing.JTable tabla = new javax.swing.JTable(modelo);
        javax.swing.JOptionPane.showMessageDialog(this, new javax.swing.JScrollPane(tabla), "Reporte de Errores", javax.swing.JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_RepErroresActionPerformed

    private void AArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AArchivoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos .jc", "jc"));
        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String linea;
                StringBuilder texto = new StringBuilder();
                while ((linea = br.readLine()) != null) {
                    texto.append(linea).append("\n");
                }
                textentrada.setText(texto.toString());
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al leer el archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AArchivoActionPerformed

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
        tabla.getTablaActual().clear();
        int index = Pest.getSelectedIndex();
        JTextArea textArea = (JTextArea) ((JScrollPane) Pest.getComponentAt(index)).getViewport().getView();
        String codigo = textArea.getText();

        try {
            scanner s = new scanner(new BufferedReader(new StringReader(codigo)));
            parser p = new parser(s);
            var resultado = p.parse();
            var ast = new Arbol((LinkedList<Instruccion>) resultado.value);
            tabla.setNombre("GLOBAL");
            ast.setConsola("");
            ast.setTablaGlobal(tabla);
            listaErrores.clear();
            listaErrores.addAll(s.listaErrores);
            listaErrores.addAll(p.listaErrores);
            for (var a : ast.getInstrucciones()) {
                if (a == null) {
                    continue;
                }
                
                if(a instanceof Metodo );{
                    ast.addFunciones(a);
                }
            }
            for (var a : ast.getInstrucciones()) {
                if (a == null) {
                    continue;
                }
                
                if(a instanceof Declaracion | a instanceof AsignacionVar);{
                    var res = a.interpretar(ast, tabla);
                    if (res instanceof Errores) {
                        listaErrores.add((Errores) res);
                    }
                }
            }
            Execute e = null;
            for (var a : ast.getInstrucciones()) {
                if (a == null) {
                    continue;
                }
                
                if (a instanceof Execute execute) {
                    e = execute;
                    break;
                }
            }
            
            
            textsalida.setText(ast.getConsola());

            for (var i : listaErrores) {
                textsalida.append(i.toString() + "\n");
            }

        } catch (Exception ex) {
            textsalida.setText("Algo salio mal\n" + ex);
        }
    }//GEN-LAST:event_EjecutarActionPerformed

    private void RepAstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepAstActionPerformed
        JOptionPane.showMessageDialog(this, "NO HAY AST", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_RepAstActionPerformed

    private void RepTablaSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepTablaSimActionPerformed
        String[] columnas = {"Nombre", "Valor"};
        java.util.HashMap<String, Object> tablaActual = tabla.getTablaActual();
        Object[][] datos = new Object[tablaActual.size()][2];
        int i = 0;
        for (String key : tablaActual.keySet()) {
            datos[i][0] = key;
            Object valor = ((Simbolo) tablaActual.get(key)).valor;

            if (valor instanceof Object[]) {
                datos[i][1] = Arrays.deepToString((Object[]) valor);
            } else if (valor instanceof LinkedList) {
                datos[i][1] = valor.toString();
            } else {
                datos[i][1] = valor.toString();
            }

            i++;
        }

        javax.swing.JTable tablaSimbolos = new javax.swing.JTable(datos, columnas);
        javax.swing.JOptionPane.showMessageDialog(this, new javax.swing.JScrollPane(tablaSimbolos), "Reporte de Tabla de Símbolos", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_RepTablaSimActionPerformed

    private void GArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GArchivoActionPerformed
        int index = Pest.getSelectedIndex();
        JTextArea textArea = (JTextArea)((JScrollPane)Pest.getComponentAt(index)).getViewport().getView();
        String contenido = textArea.getText();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar archivo");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos .jc", "jc"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();
            if (!filePath.toLowerCase().endsWith(".jc")) {
                fileToSave = new File(filePath + ".jc");
            }

            try (PrintWriter writer = new PrintWriter(fileToSave)) {
                writer.println(contenido);
                JOptionPane.showMessageDialog(this, "Archivo guardado correctamente.", "Guardar archivo", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo.", "Guardar archivo", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_GArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Javacraft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Javacraft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Javacraft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Javacraft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Javacraft().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AArchivo;
    private javax.swing.JButton Ejecutar;
    private javax.swing.JMenuItem GArchivo;
    private javax.swing.JMenuItem NArchivo;
    private javax.swing.JTabbedPane Pest;
    private javax.swing.JMenuItem RepAst;
    private javax.swing.JMenuItem RepErrores;
    private javax.swing.JMenuItem RepTablaSim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea textentrada;
    private javax.swing.JTextArea textsalida;
    // End of variables declaration//GEN-END:variables
}
